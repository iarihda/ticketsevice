package com.iarihda.maven.ticketsevice.model;

import java.util.concurrent.atomic.AtomicInteger;

/**
 * An entity identifying the specific seats held by a customer and related information. Its members are
 * SeatHold Id – Autogenerated. Starts from 1000.
 * No. of Seats – Required number of seats to be held for a customer
 * Hold Start Time – The current time when the object is created (used to discard the hold when it expires)
 * Customer Email – Unique Identifier for a customer
 * Seats – Array of seat numbers that are allocated for the hold
 * @author Adhirai Manickam
 */
public class SeatHold {
	
	private int id;
	private int noOfSeats;
	private long holdStartTime;
	private String customerEmail;
	private String[] heldSeats;
	
	private static AtomicInteger idGenerator = new AtomicInteger(1000);
	
	/**
	 * Constructor
	 * @param seatCount
	 * @param customer
	 * @param seats
	 */
	public SeatHold(int seatCount, String customer, String[] seats) {
		id = idGenerator.getAndIncrement();
		noOfSeats = seatCount;
		holdStartTime = System.currentTimeMillis();
		customerEmail = customer;
		heldSeats = seats;
	}
	
	/**
	 * @return seat hold id
	 */
	public int getId() {
		return id;
	}
	
	/**
	 * @return no. of seats
	 */
	public int getSeatCount() {
		return noOfSeats;
	}
	
	/**
	 * @return customer email
	 */
	String getCustomer() {
		return customerEmail;
	}
	
	/**
	 * @return held seats
	 */
	public String[] getHeldSeats() {
		return heldSeats;
	}
	
	/**
	 * @return current status of the hold (if it has expired or not)
	 */
	public boolean isActive() {
		return System.currentTimeMillis()<holdStartTime+TheatreSetup.getHoldLimit();
	}
	
}
